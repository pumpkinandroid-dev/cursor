https://blog.csdn.net/qq_37703224/article/details/148218248
https://developer.aliyun.com/article/1660485
irm https://raw.githubusercontent.com/yeongpin/cursor-free-vip/main/scripts/install.ps1 | iex

Cursor 中配置 GitHub MCP 的核心是通过 mcp.json 文件添加 GitHub MCP 服务器信息，并获取 GitHub Personal Access Token 以完成身份验证。具体步骤如下：
1. 配置 MCP 服务器信息
在 Cursor 的设置中，进入 Features > MCP，点击 "Add New MCP Server"，填写以下配置内容：
json

暗色
复制
{
  "mcpServers": {
    "github": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
      }
    }
  }
}
command: 启动 MCP 服务器的命令，此处为 npx。
args: 传递给 npx 的参数，用于安装并运行 GitHub MCP 服务器。
env: 环境变量，需替换 <YOUR_TOKEN> 为你的 GitHub 个人访问令牌1。
2. 获取 GitHub Personal Access Token
登录 GitHub，点击右上角头像，选择 Settings。
在左侧菜单中点击 Developer settings。
选择 Personal access tokens，然后点击 Tokens (classic)。
创建一个新的 Token，确保勾选所需权限（如 repo 和 write:packages）。
复制生成的 Token，替换配置中的 <YOUR_TOKEN>12。
3. 验证与使用
配置保存后，Cursor 会尝试连接 GitHub MCP 服务器。
若连接成功，MCP 状态会显示为绿色，并提示“X tools enabled”。
可在 Cursor 的 Agent 模式下测试功能，如创建仓库、提交代码等，Agent 会自动调用 GitHub MCP 完成操作3。

